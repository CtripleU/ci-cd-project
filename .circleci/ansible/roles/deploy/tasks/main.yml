---
  # - name: "upgrade packages" 
  #   become: yes
  #   apt:
  #     upgrade: 'yes'
      
  - name: "show remote environment"
    shell: env  

  - name: install rsync on the ansible controller
    become: yes
    connection: local
    package:
      name: rsync
      state: present

  # - name: "copy backend binaries"
  #   become: yes
  #   synchronize:
  #     src: ../../backend/dist
  #     dest: /home/ubuntu/udapeople
  #     recursive: true

  # - name: "copy node modules"
  #   become: yes
  #   synchronize:
  #     src: ../../backend/node_modules
  #     dest: /home/ubuntu/udapeople
  #     recursive: true

  # - name: "delete anything that might already be running"
  #   become: true
  #   command: pm2 delete all
  #   ignore_errors: true

  # - name: "start server"
  #   become: true
  #   command: pm2 start -f ./main.js
  #   args:
  #     chdir: /home/ubuntu/udapeople/dist

  - name: 'Unarchive backend files'
    become: yes
    unarchive:
      src: files/artifact.tar.gz
      dest: .

- name: start app
  become: yes
  shell: |
    npm run migrations
    pm2 stop default
    export $(grep TYPEORM_HOST /home/ubuntu/.env)
    pm2 start npm -- start

  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    ANSIBLE_HOST_KEY_CHECKING: False
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"